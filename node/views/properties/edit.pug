extends ../layout/admin

block styles
    link(rel="stylesheet" href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css")
    
    
  

block content 
    .py-10
        h1.text-4xl.my-10.font-extrabold.text-center Inmo
            span.font-normal Connect
        h2.text-center.text-2xl.font-extrabold= page

        if errors
            div(class="max-w-md mx-auto my-10")
                each error in errors
                    p.bg-red-600.text-white.uppercase.text-xs.text-center.p-2.mb-1.font-bold= error.msg

        div(class="bg-white shadow py-8 px-4 rounded mx-auto max-w-4xl my-10 md:px-10")
            form.space-y-8(method="POST")
                input(type="hidden" name="_csrf" value=csrfToken)
                div.space-y-5
                    h3.text-lg.leading-6.font-medium.text-gray-900 General Information
                    p.text-gray-600 Enter the general information of the property

                    div
                        label.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="title") Title
                        input#title.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(placeholder="Property Title, ex. Beach House" type="text" name="title" value= data.title ? data.title : "")

                    div
                        label.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="description") Description
                        textarea#description.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(placeholder="Description of the property..." type="text" name="description")= data.description ? data.description : ""

                    div(class="md:flex md:gap-4 space-y-5 md:space-y-0")
                        div(class="md:w-1/2")
                            label.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="category") Category
                            select#category.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(name="category")
                                option(value="") -- Select --
                                each category in categories
                                    option(value=category.id selected= data.categoryId ? data.categoryId == category.id ? true : false : null )= category.name


                        div(class="md:w-1/2")
                            label.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="price") Price
                            select#price.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(name="price")
                                option(value="") -- Select --
                                each price in prices
                                    option(value=price.id selected= data.priceId ? data.priceId == price.id ? true : false : null )= price.name
                    
                    div(class="md:flex md:gap-4 space-y-5 md:space-y-0")
                        div(class="md:w-1/3")
                            label.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="rooms") Rooms
                            select#rooms.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(name="rooms")
                                option(value="") -- Select --
                                - let roomsNumber = 1;
                                    while roomsNumber < 6
                                        option(value=roomsNumber selected= data.rooms ? data.rooms == roomsNumber ? true : false : null ) #{roomsNumber++}

                        div(class="md:w-1/3")
                            label.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="parkings") Parkings
                            select#parkings.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(name="parkings")
                                option(value="") -- Select --
                                - let parkingsNumber = 1;
                                    while parkingsNumber < 5
                                        option(value=parkingsNumber selected= data.parkings ? data.parkings == parkingsNumber ? true : false : null ) #{parkingsNumber++}

                        div(class="md:w-1/3")
                            label.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="wcs") WCs
                            select#wcs.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(name="wcs")
                                option(value="") -- Select --
                                - let wcNumber = 1;
                                    while wcNumber < 5
                                        option(value=wcNumber selected= data.wcs ? data.wcs == wcNumber ? true : false : null ) #{wcNumber++}
                    div.border-gray-200.border-t.py-5.space-y-5
                        h3.text-lg.leading-6.font-medium.text-gray-900 Location
                        p.text-gray-600 Enter the location of the property
                        #mapa.h-96

                        div 
                            p.street= data.street ? data.street : ""
                        input(type="hidden" name="street" id="street" value= data.street ? data.street : "")
                        input(type="hidden" name="lat" id="lat" value= data.lat ? data.lat : "")
                        input(type="hidden" name="lng" id="lng" value= data.lng ? data.lng : "")
                    
                    input(class="w-full py-3 bg-indigo-600 hover:bg-indigo-700 rounded text-white font-bold uppercase cursor-pointer" type="submit" value="Save Property")

                
                            
block scripts
    script(src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js")
    script(src="https://unpkg.com/esri-leaflet@3.0.8/dist/esri-leaflet.js")
    script(src="https://unpkg.com/esri-leaflet-geocoder@2.2.13/dist/esri-leaflet-geocoder.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/leaflet-geosearch/2.7.0/bundle.min.js")
    script(src="/js/map.js")